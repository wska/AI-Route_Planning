;;;; AI project: multi-agent routeplanning

;;;; Authors:
;;;; - Adrian Chmielewski-Anders
;;;; - Alex Mellado
;;;; - Daniel Skantz
;;;; - William Sk√§gerstrom
;;;; - Bas Straathof

;;;; Solution in JSHOP2


(defdomain routeplanning
  (
    (:operator
      ;; define a valid move
      (!move-to ?agent1 ?agent2 ?1from ?1to ?2from ?2to)

      ; preconditions
      ((agent ?agent1)
       (agent ?agent2)

       (location ?from1)
       (location ?to1)
       (location ?from2)
       (location ?to2)

       (can_move ?from1 ?to1)
       (can_move ?from2 ?to2)

       (at ?agent1 ?from1)
       (at ?agent2 ?from2)
      )

      ; delete list
      ((at ?agent1 ?from1)
       (at ?agent2 ?from2)
      )

      ; add list
      ((at ?agent1 ?to1)
       (at ?agent2 ?to2)
      )
    )

    (:operator
      ;; add a location to list of visited nodes
      (!visit ?location)
      ()
      ()
      ((visited ?location))
    )

    (:operator
      ;; delete a location to list of visited nodes
      (!unvisit ?location)
      ()
      ((visited ?location))
      ()
    )

    (:method
      ;; move agent to a node
      (move-to ?agent1 ?agent2 ?to1 ?to2)
      ((at ?agent1 ?from1)
       (at ?agent2 ?from2))
      ((!visit ?from1)
       (move-to ?agent1 ?from1 ?to1)
       (!unvisit ?from1)

       (!visit ?from2)
       (move-to ?agent2 ?from2 ?to2)
       (!unvisit ?from2)
      )
    )

    (:method
      ;; move both agents from their starting node to their destination node
      (move-to ?agent1 ?agent2 ?from1 ?from2 ?to1 ?to2)

      case1-both-agents-at-destination
      ((at ?agent1 ?to1)
       (at ?agent2 ?to2))
      ()

      case2-agent1-agent-at-destination-agent2-can-move-directly
      ((at ?agent1 ?to1)
       (can_move ?agent2 ?from2 ?to2))
      ((!move-to ?agent2 ?from2 ?to2))

      case3-agent1-agent-at-destination-agent2-cannot-move-directly
      ((at ?agent1 ?to1)
       (location ?mid)
       (can_move ?from2 ?mid)
       (not (visited ?mid))
      )
      ((!move-to ?agent2 ?from2 ?mid)
        (!visit ?mid)
        (move-to ?agent2 ?mid ?to2)
        (!unvisit ?mid)
      )

      case4-agent1-agent-can-move-directly-agent2-at-destination
      ((can_move ?agent1 ?from1 ?to1)
       (at ?agent2 ?to2))
      ((!move-to ?agent1 ?from1 ?to1))

      case5-both-agents-can-move-directly
      ((can_move ?agent1 ?from1 ?to1)
       (can_move ?agent2 ?from2 ?to2))
      ((!move-to ?agent1 ?from1 ?to1)
       (!move-to ?agent2 ?from2 ?to2))

      case6-agent1-can-move-directly-agent2-cannot-move-directly
      ((can_move ?agent1 ?from1 ?to1)
       (location ?mid)
       (can_move ?from2 ?mid)
       (not (visited ?mid)))
      ((!move-to ?agent1 ?from1 ?to1)
       (!move-to ?agent2 ?from2 ?mid)
       (!visit ?mid)
       (move-to ?agent2 ?mid ?to2)
       (!unvisit ?mid))

      case7-agent1-cannot-move-directly-agent2-at-destination
      ((location ?mid)
       (can_move ?from1 ?mid)
       (not (visited ?mid))
       (at ?agent2 ?to2))
      ((!move-to ?agent1 ?from1 ?mid)
        (!visit ?mid)
        (move-to ?agent1 ?mid ?to1)
        (!unvisit ?mid))

      case8-agent1-cannot-move-directly-agent2-can-move-directly
      ((location ?mid)
       (can_move ?from1 ?mid)
       (not (visited ?mid))
       (can_move ?agent2 ?from2 ?to2))
      ((!move-to ?agent1 ?from1 ?mid)
        (!visit ?mid)
        (move-to ?agent1 ?mid ?to1)
        (!unvisit ?mid)
       (!move-to ?agent2 ?from2 ?to2))

      case9-both-agents-cannot-move-directly
      ((location ?mid1)
       (can_move ?from1 ?mid1)
       (not (visited ?mid1))
       (location ?mid2)
       (can_move ?from2 ?mid2)
       (not (visited ?mid2)))
      ((!move-to ?agent1 ?from1 ?mid1)
        (!visit ?mid1)
        (move-to ?agent1 ?mid1 ?to1)
        (!unvisit ?mid1)
       (!move-to ?agent2 ?from2 ?mid2)
        (!visit ?mid2)
        (move-to ?agent2 ?mid2 ?to2)
        (!unvisit ?mid2))
    )

    (:method
      ;; goal method
      (go-to-destination ?agent1 ?agent2 ?location1 ?location2)
      ((location ?location1)
       (location ?location2)
       (agent ?agent1)
       (agent ?agent2)
      )
      ((move-to ?agent1 ?agent2 ?location1 ?location2))
    )
  )
)

